// google fonts
// roboto
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Style+Script&display=swap");

@mixin heading($size, $weight) {
  font-family: "Roboto", sans-serif;
  font-style: normal;
  line-height: 120%;
  letter-spacing: 0.009375rem;

  cursor: default;

  @if $size == h1 {
    font-size: 3.25rem;
    font-weight: $weight;
  } @else if $size == h2 {
    font-size: 2.5rem;
    font-weight: $weight;
  } @else if $size == h3 {
    font-size: 2rem;
    font-weight: $weight;
  } @else if $size == h4 {
    font-size: 1.5rem;
    font-weight: $weight;
  } @else if $size == h5 {
    font-size: 1.25rem;
    font-weight: $weight;
  } @else if $size == h6 {
    font-size: 1rem;
    font-weight: $weight;
  }
}

@mixin text($size, $weight, $line-height) {
  font-family: "Roboto", sans-serif;
  font-style: normal;
  line-height: $line-height !important;
  letter-spacing: 0.009375rem;
  font-weight: $weight !important;

  cursor: default;

  @if $size == large {
    font-size: 1.25rem !important;
  } @else if $size == medium {
    font-size: 1.125rem !important;
  } @else if $size == normal {
    font-size: 1rem !important;
  } @else if $size == small {
    font-size: 0.875rem !important;
  } @else if $size == extra-small {
    font-size: 0.75rem !important;
  } @else if $size == xx-small {
    font-size: 0.624rem !important;
  }
}

@mixin clear($element) {
  @if $element == btn {
    background: transparent;
    border: none;
    box-shadow: none;
    outline: none;
    &:focus {
      box-shadow: none;
      outline: none;
    }
  } @else if $element == input {
    background-color: transparent;
    border: none;
    box-shadow: none;
    outline: none;
    &:focus {
      box-shadow: none;
      outline: none;
    }
  } @else if $element == accordion {
    background: transparent;
    border: none;
    box-shadow: none;
    outline: none;
    &:focus {
      box-shadow: none;
      outline: none;
    }
  } @else if $element == dropdown-item {
    &:hover {
      background: transparent;
    }
  }
}

@mixin square($size, $radius) {
  $size: $size;
  width: $size;
  height: $size;
  border-radius: $radius;
}

@mixin cursor($cursor) {
  cursor: $cursor;
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  div,
  a,
  span,
  p,
  div,
  ul,
  li,
  label,
  input {
    cursor: $cursor;
  }
}

@mixin pesudo($content) {
  content: $content;

  position: absolute;
  @if $content != "" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else {
    top: 0;
    left: 0;
  }
}

@mixin badge($type, $status) {
  position: relative;

  @if $type == "status" {
    &::after {
      @include pesudo("");
      top: 0.375rem;
      left: 0.375rem;

      @include square(0.5rem, 50%);

      @if $status == "online" {
        background: $color--online;
      } @else if $status == "error" {
        background: $color--error;
      } @else if $status == "offline" {
        background: $color--offline;
      }
    }
  }
}

@mixin scrollbar($style) {
  @if $style == hidden {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
    &::-webkit-scrollbar {
      display: none;
    }
  } @else {
    &::-webkit-scrollbar {
      width: 0.25rem;
    }

    &::-webkit-scrollbar-track {
      background: transparent;
      border-radius: 10rem;
    }

    &::-webkit-scrollbar-thumb {
      background: $color--muted3;
      border-radius: 10rem;
      background-clip: content-box;
      transition: $transition;
      &:hover {
        background: $color--action;
      }
    }
  }
}
